(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../pkg/gbcemu.js":
/*!************************!*\
  !*** ../pkg/gbcemu.js ***!
  \************************/
/*! exports provided: init, JoypadInput, Cartridge, Gameboy, __wbindgen_string_new, __wbindgen_is_falsy, __wbindgen_object_drop_ref, __wbg_debug_0cf9a9e5ff51a633, __wbg_error_9783be44659339ea, __wbg_error_c20eff071be69905, __wbg_info_acc842bdd3caace9, __wbg_log_74b99b8aa17dd3e9, __wbg_warn_a53fd622a8636f05, __wbg_getTime_6e1051297e199ada, __wbg_new0_1dc5063f3422cdfe, __wbindgen_throw, __wbindgen_rethrow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gbcemu_bg.wasm */ \"../pkg/gbcemu_bg.wasm\");\n/* harmony import */ var _gbcemu_bg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gbcemu_bg.js */ \"../pkg/gbcemu_bg.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"init\", function() { return _gbcemu_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"init\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"JoypadInput\", function() { return _gbcemu_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"JoypadInput\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Cartridge\", function() { return _gbcemu_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"Cartridge\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Gameboy\", function() { return _gbcemu_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"Gameboy\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_string_new\", function() { return _gbcemu_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_string_new\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_is_falsy\", function() { return _gbcemu_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_is_falsy\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return _gbcemu_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_object_drop_ref\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_debug_0cf9a9e5ff51a633\", function() { return _gbcemu_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_debug_0cf9a9e5ff51a633\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_error_9783be44659339ea\", function() { return _gbcemu_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_error_9783be44659339ea\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_error_c20eff071be69905\", function() { return _gbcemu_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_error_c20eff071be69905\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_info_acc842bdd3caace9\", function() { return _gbcemu_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_info_acc842bdd3caace9\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_log_74b99b8aa17dd3e9\", function() { return _gbcemu_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_log_74b99b8aa17dd3e9\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_warn_a53fd622a8636f05\", function() { return _gbcemu_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_warn_a53fd622a8636f05\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_getTime_6e1051297e199ada\", function() { return _gbcemu_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_getTime_6e1051297e199ada\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_new0_1dc5063f3422cdfe\", function() { return _gbcemu_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_new0_1dc5063f3422cdfe\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return _gbcemu_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_throw\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_rethrow\", function() { return _gbcemu_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_rethrow\"]; });\n\n\n\n\n//# sourceURL=webpack:///../pkg/gbcemu.js?");

/***/ }),

/***/ "../pkg/gbcemu_bg.js":
/*!***************************!*\
  !*** ../pkg/gbcemu_bg.js ***!
  \***************************/
/*! exports provided: init, JoypadInput, Cartridge, Gameboy, __wbindgen_string_new, __wbindgen_is_falsy, __wbindgen_object_drop_ref, __wbg_debug_0cf9a9e5ff51a633, __wbg_error_9783be44659339ea, __wbg_error_c20eff071be69905, __wbg_info_acc842bdd3caace9, __wbg_log_74b99b8aa17dd3e9, __wbg_warn_a53fd622a8636f05, __wbg_getTime_6e1051297e199ada, __wbg_new0_1dc5063f3422cdfe, __wbindgen_throw, __wbindgen_rethrow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"init\", function() { return init; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JoypadInput\", function() { return JoypadInput; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Cartridge\", function() { return Cartridge; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Gameboy\", function() { return Gameboy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_string_new\", function() { return __wbindgen_string_new; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_is_falsy\", function() { return __wbindgen_is_falsy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_debug_0cf9a9e5ff51a633\", function() { return __wbg_debug_0cf9a9e5ff51a633; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_error_9783be44659339ea\", function() { return __wbg_error_9783be44659339ea; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_error_c20eff071be69905\", function() { return __wbg_error_c20eff071be69905; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_info_acc842bdd3caace9\", function() { return __wbg_info_acc842bdd3caace9; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_log_74b99b8aa17dd3e9\", function() { return __wbg_log_74b99b8aa17dd3e9; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_warn_a53fd622a8636f05\", function() { return __wbg_warn_a53fd622a8636f05; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_getTime_6e1051297e199ada\", function() { return __wbg_getTime_6e1051297e199ada; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_new0_1dc5063f3422cdfe\", function() { return __wbg_new0_1dc5063f3422cdfe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_rethrow\", function() { return __wbindgen_rethrow; });\n/* harmony import */ var _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gbcemu_bg.wasm */ \"../pkg/gbcemu_bg.wasm\");\n\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory0 = new Uint8Array(_gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetInt32Memory0 = new Int32Array(_gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n*/\nfunction init() {\n    _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"init\"]();\n}\n\n/**\n*/\nconst JoypadInput = Object.freeze({ Up:0,\"0\":\"Up\",Down:1,\"1\":\"Down\",Left:2,\"2\":\"Left\",Right:3,\"3\":\"Right\",A:4,\"4\":\"A\",B:5,\"5\":\"B\",Start:6,\"6\":\"Start\",Select:7,\"7\":\"Select\", });\n/**\n*/\nclass Cartridge {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Cartridge.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_cartridge_free\"](ptr);\n    }\n    /**\n    * @param {Uint8Array} data\n    */\n    constructor(data) {\n        var ptr0 = passArray8ToWasm0(data, _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"]);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"cartridge_new\"](ptr0, len0);\n        return Cartridge.__wrap(ret);\n    }\n}\n/**\n*/\nclass Gameboy {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Gameboy.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_gameboy_free\"](ptr);\n    }\n    /**\n    * Create a new `Gameboy` from a valid cartridge\n    * @param {Cartridge} cartridge\n    */\n    constructor(cartridge) {\n        _assertClass(cartridge, Cartridge);\n        var ptr0 = cartridge.ptr;\n        cartridge.ptr = 0;\n        var ret = _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gameboy_new\"](ptr0);\n        return Gameboy.__wrap(ret);\n    }\n    /**\n    * Run the Gameboy for a single frame.\n    *\n    * Returns a pointer to the first pixel in the frame buffer. This\n    * allows JS to overlay this memory on a Uint8Array to avoid copying the\n    * entire frame.\n    * @returns {number}\n    */\n    frame() {\n        var ret = _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gameboy_frame\"](this.ptr);\n        return ret;\n    }\n    /**\n    */\n    reset() {\n        _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gameboy_reset\"](this.ptr);\n    }\n    /**\n    * Record a joypad input for the next frame\n    * @param {number} input\n    * @param {any} down\n    */\n    joypad_input(input, down) {\n        _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gameboy_joypad_input\"](this.ptr, input, addHeapObject(down));\n    }\n    /**\n    * Save the state of the Gameboy\n    * @returns {Uint8Array}\n    */\n    save() {\n        try {\n            const retptr = _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](-16);\n            _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gameboy_save\"](retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](r0, r1 * 1);\n            return v0;\n        } finally {\n            _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_add_to_stack_pointer\"](16);\n        }\n    }\n    /**\n    * Create a Gameboy from an existing save state\n    * @param {Uint8Array} data\n    * @param {Cartridge} cartridge\n    * @returns {Gameboy}\n    */\n    static load(data, cartridge) {\n        var ptr0 = passArray8ToWasm0(data, _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"]);\n        var len0 = WASM_VECTOR_LEN;\n        _assertClass(cartridge, Cartridge);\n        var ptr1 = cartridge.ptr;\n        cartridge.ptr = 0;\n        var ret = _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gameboy_load\"](ptr0, len0, ptr1);\n        return Gameboy.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    static lcd_width() {\n        var ret = _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gameboy_lcd_width\"]();\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    static lcd_height() {\n        var ret = _gbcemu_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gameboy_lcd_height\"]();\n        return ret >>> 0;\n    }\n}\n\nconst __wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nconst __wbindgen_is_falsy = function(arg0) {\n    var ret = !getObject(arg0);\n    return ret;\n};\n\nconst __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nconst __wbg_debug_0cf9a9e5ff51a633 = function(arg0, arg1, arg2, arg3) {\n    console.debug(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n};\n\nconst __wbg_error_9783be44659339ea = function(arg0) {\n    console.error(getObject(arg0));\n};\n\nconst __wbg_error_c20eff071be69905 = function(arg0, arg1, arg2, arg3) {\n    console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n};\n\nconst __wbg_info_acc842bdd3caace9 = function(arg0, arg1, arg2, arg3) {\n    console.info(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n};\n\nconst __wbg_log_74b99b8aa17dd3e9 = function(arg0, arg1, arg2, arg3) {\n    console.log(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n};\n\nconst __wbg_warn_a53fd622a8636f05 = function(arg0, arg1, arg2, arg3) {\n    console.warn(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n};\n\nconst __wbg_getTime_6e1051297e199ada = function(arg0) {\n    var ret = getObject(arg0).getTime();\n    return ret;\n};\n\nconst __wbg_new0_1dc5063f3422cdfe = function() {\n    var ret = new Date();\n    return addHeapObject(ret);\n};\n\nconst __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nconst __wbindgen_rethrow = function(arg0) {\n    throw takeObject(arg0);\n};\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../www/node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack:///../pkg/gbcemu_bg.js?");

/***/ }),

/***/ "../pkg/gbcemu_bg.wasm":
/*!*****************************!*\
  !*** ../pkg/gbcemu_bg.wasm ***!
  \*****************************/
/*! exports provided: memory, __wbg_cartridge_free, cartridge_new, __wbg_gameboy_free, gameboy_new, gameboy_frame, gameboy_reset, gameboy_joypad_input, gameboy_save, gameboy_load, gameboy_lcd_width, gameboy_lcd_height, init, __wbindgen_malloc, __wbindgen_add_to_stack_pointer, __wbindgen_free */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./gbcemu_bg.js */ \"../pkg/gbcemu_bg.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/gbcemu_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var gbcemu__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gbcemu */ \"../pkg/gbcemu.js\");\n/* harmony import */ var gbcemu_gbcemu_bg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gbcemu/gbcemu_bg */ \"../pkg/gbcemu_bg.wasm\");\n/* harmony import */ var idb_keyval__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! idb-keyval */ \"./node_modules/idb-keyval/dist/esm/index.js\");\n\n\n\n\nclass Emulator {\n    constructor() {\n        this.lcd_width = gbcemu__WEBPACK_IMPORTED_MODULE_0__[\"Gameboy\"].lcd_width();\n        this.lcd_height = gbcemu__WEBPACK_IMPORTED_MODULE_0__[\"Gameboy\"].lcd_height();\n        this.frameTimer = null;\n        this.gameboy = null;\n        this.romName = null;\n        this.running = false;\n\n        this.canvas = document.getElementById(\"emulator\");\n        this.ctx = this.canvas.getContext(\"2d\");\n\n        this.romPicker = document.getElementById(\"rompicker\");\n        this.startButton = document.getElementById(\"start\");\n        this.pauseButton = document.getElementById(\"pause\");\n        this.resetButton = document.getElementById(\"reset\");\n        this.saveStateButton = document.getElementById(\"save-state\");\n        this.loadStateButton = document.getElementById(\"load-state\");\n\n        this.startButton.onclick = () => this.start();\n        this.pauseButton.onclick = () => this.pause();\n        this.resetButton.onclick = () => this.reset();\n        this.saveStateButton.onclick = () => this.saveState();\n        this.loadStateButton.onclick = () => this.loadState();\n    }\n\n    // Initialize the emulator from raw ROM data\n    init(romBuffer) {\n        // Setup a Gameboy from the given ROM file\n        const romData = new Uint8Array(romBuffer);\n        const cartridge = new gbcemu__WEBPACK_IMPORTED_MODULE_0__[\"Cartridge\"](romData);\n\n        try {\n            this.gameboy = new gbcemu__WEBPACK_IMPORTED_MODULE_0__[\"Gameboy\"](cartridge);\n        } catch (e) {\n            console.error(e);\n            throw e;\n        }\n\n        console.log(\"Gameboy loaded!\");\n    }\n\n    async loadRom() {\n        if (this.romPicker.files.length == 0) {\n            alert(\"Please load a ROM first!\");\n            return;\n        }\n\n        const romFile = this.romPicker.files[0];\n        this.romName = romFile.name;\n\n        return await romFile.arrayBuffer();\n    }\n\n    start() {\n        this.loadRom().then((romBuffer) => {\n            this.init(romBuffer);\n            this.run();\n        });\n    }\n\n    run() {\n        if (this.frameTimer != null) {\n            clearInterval(this.frameTimer);\n        }\n\n        // Start a timer for frame rendering (59.7 FPS)\n        this.frameTimer = window.setInterval(() => {\n            // Render a frame\n            this.renderFrame()\n        }, 16.7504);\n\n        this.running = true;\n    }\n\n    stop() {\n        if (this.frameTimer != null) {\n            clearInterval(this.frameTimer);\n            this.frameTimer = null;\n        }\n\n        this.running = false;\n    }\n\n    reset() {\n        if (this.gameboy != null) {\n            this.gameboy.reset();\n        }\n    }\n\n    async saveState() {\n        if (this.gameboy != null && this.romName != null) {\n            const buffer = this.gameboy.save();\n            await Object(idb_keyval__WEBPACK_IMPORTED_MODULE_2__[\"set\"])(this.romName + \".state\", buffer);\n        }\n    }\n\n    async loadState() {\n        const romBuffer = await this.loadRom();\n        const romData = new Uint8Array(romBuffer);\n        const cartridge = new gbcemu__WEBPACK_IMPORTED_MODULE_0__[\"Cartridge\"](romData);\n        const saveState = await Object(idb_keyval__WEBPACK_IMPORTED_MODULE_2__[\"get\"])(this.romName + \".state\");\n\n        if (saveState == null) {\n            window.alert(\"No save state found for this ROM!\");\n        } else {\n            this.gameboy = gbcemu__WEBPACK_IMPORTED_MODULE_0__[\"Gameboy\"].load(saveState, cartridge);\n            this.run();\n        }\n    }\n\n    pause() {\n        if (this.pauseButton.textContent == \"Pause\") {\n            this.stop();\n            this.pauseButton.textContent = \"Resume\";\n        } else if (this.pauseButton.textContent == \"Resume\") {\n            this.run();\n            this.pauseButton.textContent = \"Pause\";\n        }\n    }\n\n    renderFrame() {\n        // Get a pointer to the frame in WASM memory, then overlay a Uint8Array on top\n        // to avoid copying the frame data out of WASM into JS on every frame\n        const frameBufferPtr = this.gameboy.frame();\n\n        // Each pixel in the frame buffer consists of 3 bytes for RGB values\n        const frameBuffer = new Uint8Array(gbcemu_gbcemu_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, frameBufferPtr,\n                                           this.lcd_width * this.lcd_height * 3);\n\n        // Create an `imageData` to write pixels to\n        const imageData = this.ctx.createImageData(this.lcd_width, this.lcd_height);\n        const data = imageData.data;\n\n        // Iterate over the frame buffer pixels and write each one to the imageData buffer\n        for (var x = 0; x < this.lcd_width; x += 1) {\n            for (var y = 0; y < this.lcd_height; y += 1) {\n                const source_idx = y * this.lcd_width * 3 + x * 3;\n                const red = frameBuffer[source_idx];\n                const green = frameBuffer[source_idx+1];\n                const blue = frameBuffer[source_idx+2];\n\n                // Frame buffer pixels are just RGB, so we need to add the alpha\n                const dest_idx = y * this.lcd_width * 4 + x * 4;\n                data[dest_idx] = red;\n                data[dest_idx+1] = green;\n                data[dest_idx+2] = blue;\n                data[dest_idx+3] = 255; // alpha\n            }\n        }\n\n        // Render the frame on the canvas at position (0, 0)\n        this.ctx.putImageData(imageData, 0, 0);\n    }\n\n    // Map a raw keycode to a emulator joypad input\n    mapKeyCodeToInput(keycode) {\n        let joypad_input = null;\n\n        switch (keycode) {\n            case \"ArrowUp\":\n                joypad_input = gbcemu__WEBPACK_IMPORTED_MODULE_0__[\"JoypadInput\"].Up;\n                break;\n            case \"ArrowDown\":\n                joypad_input = gbcemu__WEBPACK_IMPORTED_MODULE_0__[\"JoypadInput\"].Down;\n                break;\n            case \"ArrowLeft\":\n                joypad_input = gbcemu__WEBPACK_IMPORTED_MODULE_0__[\"JoypadInput\"].Left;\n                break;\n            case \"ArrowRight\":\n                joypad_input = gbcemu__WEBPACK_IMPORTED_MODULE_0__[\"JoypadInput\"].Right;\n                break;\n            case \"KeyS\":\n                joypad_input = gbcemu__WEBPACK_IMPORTED_MODULE_0__[\"JoypadInput\"].A;\n                break;\n            case \"KeyA\":\n                joypad_input = gbcemu__WEBPACK_IMPORTED_MODULE_0__[\"JoypadInput\"].B;\n                break;\n            case \"KeyX\":\n                joypad_input = gbcemu__WEBPACK_IMPORTED_MODULE_0__[\"JoypadInput\"].Start;\n                break;\n            case \"KeyZ\":\n                joypad_input = gbcemu__WEBPACK_IMPORTED_MODULE_0__[\"JoypadInput\"].Select;\n                break;\n            default:\n                break;\n        }\n\n        return joypad_input;\n    }\n\n    handleKey(keyEvent, down) {\n        if (this.gameboy == null) {\n            return;\n        }\n\n        const keyCode = keyEvent.code;\n        const joypad_input = this.mapKeyCodeToInput(keyCode);\n\n        if (joypad_input != null && this.running) {\n            this.gameboy.joypad_input(joypad_input, down);\n        }\n    }\n}\n\ngbcemu__WEBPACK_IMPORTED_MODULE_0__[\"init\"]()\n\nconst emulator = new Emulator();\n\ndocument.addEventListener(\"keydown\", (event) => {\n    emulator.handleKey(event, true);\n});\n\ndocument.addEventListener(\"keyup\", (event) => {\n    emulator.handleKey(event, false);\n});\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./node_modules/idb-keyval/dist/esm/index.js":
/*!***************************************************!*\
  !*** ./node_modules/idb-keyval/dist/esm/index.js ***!
  \***************************************************/
/*! exports provided: clear, createStore, del, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clear\", function() { return clear; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createStore\", function() { return createStore; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"del\", function() { return del; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"entries\", function() { return entries; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return get; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMany\", function() { return getMany; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keys\", function() { return keys; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"promisifyRequest\", function() { return promisifyRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"set\", function() { return set; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setMany\", function() { return setMany; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"update\", function() { return update; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"values\", function() { return values; });\nfunction promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n        // @ts-ignore - file size hacks\n        request.oncomplete = request.onsuccess = () => resolve(request.result);\n        // @ts-ignore - file size hacks\n        request.onabort = request.onerror = () => reject(request.error);\n    });\n}\nfunction createStore(dbName, storeName) {\n    const request = indexedDB.open(dbName);\n    request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n    const dbp = promisifyRequest(request);\n    return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));\n}\nlet defaultGetStoreFunc;\nfunction defaultGetStore() {\n    if (!defaultGetStoreFunc) {\n        defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n    }\n    return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction get(key, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => promisifyRequest(store.get(key)));\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction set(key, value, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.put(value, key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic – if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction setMany(entries, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        entries.forEach((entry) => store.put(entry[1], entry[0]));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction getMany(keys, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => Promise.all(keys.map((key) => promisifyRequest(store.get(key)))));\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction update(key, updater, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => \n    // Need to create the promise manually.\n    // If I try to chain promises, the transaction closes in browsers\n    // that use a promise polyfill (IE10/11).\n    new Promise((resolve, reject) => {\n        store.get(key).onsuccess = function () {\n            try {\n                store.put(updater(this.result), key);\n                resolve(promisifyRequest(store.transaction));\n            }\n            catch (err) {\n                reject(err);\n            }\n        };\n    }));\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction del(key, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.delete(key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction clear(customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.clear();\n        return promisifyRequest(store.transaction);\n    });\n}\nfunction eachCursor(customStore, callback) {\n    return customStore('readonly', (store) => {\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n        // And openKeyCursor isn't supported by Safari.\n        store.openCursor().onsuccess = function () {\n            if (!this.result)\n                return;\n            callback(this.result);\n            this.result.continue();\n        };\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction keys(customStore = defaultGetStore()) {\n    const items = [];\n    return eachCursor(customStore, (cursor) => items.push(cursor.key)).then(() => items);\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction values(customStore = defaultGetStore()) {\n    const items = [];\n    return eachCursor(customStore, (cursor) => items.push(cursor.value)).then(() => items);\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction entries(customStore = defaultGetStore()) {\n    const items = [];\n    return eachCursor(customStore, (cursor) => items.push([cursor.key, cursor.value])).then(() => items);\n}\n\n\n\n\n//# sourceURL=webpack:///./node_modules/idb-keyval/dist/esm/index.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///(webpack)/buildin/harmony-module.js?");

/***/ })

}]);